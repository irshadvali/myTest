{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.post = post;\nexports.get = get;\nexports.put = put;\nexports.patch = patch;\nexports.API_URL_ROOT = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar API_URL_ROOT = \"https://frozen-shore-39944.herokuapp.com/irshad\";\nexports.API_URL_ROOT = API_URL_ROOT;\n\nfunction post(url, payload) {\n  return _regenerator.default.async(function post$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(\"Post \", API_URL_ROOT + \"/\" + url);\n          console.log(\"payload \", JSON.stringify(payload));\n          _context.next = 4;\n          return _regenerator.default.awrap(fetch(API_URL_ROOT + \"/\" + url, {\n            method: \"POST\",\n            body: JSON.stringify(payload),\n            headers: {\n              \"Content-Type\": \"application/json;charset=utf-8\"\n            }\n          }));\n\n        case 4:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction get(url) {\n  return _regenerator.default.async(function get$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(\"Url root\", API_URL_ROOT + \"/\" + url);\n          _context2.next = 3;\n          return _regenerator.default.awrap(fetch(API_URL_ROOT + \"/\" + url, {}));\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction put(url, payload) {\n  return _regenerator.default.async(function put$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log(\"Url root\", API_URL_ROOT + \"/\" + url);\n          console.log(\"Url Body\", JSON.stringify(payload));\n          _context3.next = 4;\n          return _regenerator.default.awrap(fetch(API_URL_ROOT + \"/\" + url, {\n            method: \"PUT\",\n            body: JSON.stringify(payload),\n            headers: {\n              \"Content-Type\": \"application/json;charset=utf-8\"\n            }\n          }));\n\n        case 4:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction patch(url) {\n  return _regenerator.default.async(function patch$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          console.log(\"Url root\", API_URL_ROOT + \"/\" + url);\n          _context4.next = 3;\n          return _regenerator.default.awrap(fetch(API_URL_ROOT + \"/\" + url, {\n            method: \"DELETE\",\n            headers: {\n              \"Content-Type\": \"application/json;charset=utf-8\"\n            }\n          }));\n\n        case 3:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/Users/irshadvali/Documents/React-Native/myTest/src/utils/apiRequest.js"],"names":["API_URL_ROOT","post","url","payload","console","log","JSON","stringify","fetch","method","body","headers","get","put","patch"],"mappings":";;;;;;;;;;;;;AACO,IAAMA,YAAY,GAAG,iDAArB;;;AACA,SAAeC,IAAf,CAAoBC,GAApB,EAAyBC,OAAzB;AAAA;AAAA;AAAA;AAAA;AACLC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAwBL,YAAxB,SAAwCE,GAAxC;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAxB;AAFK;AAAA,4CAKQK,KAAK,CAAIR,YAAJ,SAAoBE,GAApB,EAA2B;AAC3CO,YAAAA,MAAM,EAAE,MADmC;AAE3CC,YAAAA,IAAI,EAAEJ,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAFqC;AAG3CQ,YAAAA,OAAO,EAAE;AACP,8BAAgB;AADT;AAHkC,WAA3B,CALb;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAeC,GAAf,CAAmBV,GAAnB;AAAA;AAAA;AAAA;AAAA;AACLE,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAA2BL,YAA3B,SAA2CE,GAA3C;AADK;AAAA,4CAEQM,KAAK,CAAIR,YAAJ,SAAoBE,GAApB,EAA2B,EAA3B,CAFb;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,SAAeW,GAAf,CAAmBX,GAAnB,EAAwBC,OAAxB;AAAA;AAAA;AAAA;AAAA;AACLC,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAA2BL,YAA3B,SAA2CE,GAA3C;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAxB;AAFK;AAAA,4CAGQK,KAAK,CAAIR,YAAJ,SAAoBE,GAApB,EAA2B;AAC3CO,YAAAA,MAAM,EAAE,KADmC;AAE3CC,YAAAA,IAAI,EAAEJ,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAFqC;AAG3CQ,YAAAA,OAAO,EAAE;AACP,8BAAgB;AADT;AAHkC,WAA3B,CAHb;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAAeG,KAAf,CAAqBZ,GAArB;AAAA;AAAA;AAAA;AAAA;AACLE,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAA2BL,YAA3B,SAA2CE,GAA3C;AADK;AAAA,4CAGQM,KAAK,CAAIR,YAAJ,SAAoBE,GAApB,EAA2B;AAC3CO,YAAAA,MAAM,EAAE,QADmC;AAE3CE,YAAAA,OAAO,EAAE;AACP,8BAAgB;AADT;AAFkC,WAA3B,CAHb;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["\nexport const API_URL_ROOT = \"https://frozen-shore-39944.herokuapp.com/irshad\";\nexport async function post(url, payload) {\n  console.log(\"Post \", `${API_URL_ROOT}/${url}`);\n  console.log(\"payload \", JSON.stringify(payload));\n\n \n  return await fetch(`${API_URL_ROOT}/${url}`, {\n    method: \"POST\",\n    body: JSON.stringify(payload),\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  });\n}\n\n\n\nexport async function get(url) {\n  console.log(\"Url root\", `${API_URL_ROOT}/${url}`);\n  return await fetch(`${API_URL_ROOT}/${url}`, {});\n}\n\nexport async function put(url, payload) {\n  console.log(\"Url root\", `${API_URL_ROOT}/${url}`);\n  console.log(\"Url Body\", JSON.stringify(payload));\n  return await fetch(`${API_URL_ROOT}/${url}`, {\n    method: \"PUT\",\n    body: JSON.stringify(payload),\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  });\n}\nexport async function patch(url) {\n  console.log(\"Url root\", `${API_URL_ROOT}/${url}`);\n\n  return await fetch(`${API_URL_ROOT}/${url}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  });\n}\n\n"]},"metadata":{},"sourceType":"script"}